// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActivationRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Pw                   string   `protobuf:"bytes,2,opt,name=pw,proto3" json:"pw,omitempty"`
	PwConfirm            string   `protobuf:"bytes,3,opt,name=pwConfirm,proto3" json:"pwConfirm,omitempty"`
	OtpSecret            string   `protobuf:"bytes,4,opt,name=otpSecret,proto3" json:"otpSecret,omitempty"`
	Recaptcha            string   `protobuf:"bytes,5,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActivationRequest) Reset()         { *m = ActivationRequest{} }
func (m *ActivationRequest) String() string { return proto.CompactTextString(m) }
func (*ActivationRequest) ProtoMessage()    {}
func (*ActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{0}
}

func (m *ActivationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivationRequest.Unmarshal(m, b)
}
func (m *ActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivationRequest.Marshal(b, m, deterministic)
}
func (m *ActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivationRequest.Merge(m, src)
}
func (m *ActivationRequest) XXX_Size() int {
	return xxx_messageInfo_ActivationRequest.Size(m)
}
func (m *ActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivationRequest proto.InternalMessageInfo

func (m *ActivationRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ActivationRequest) GetPw() string {
	if m != nil {
		return m.Pw
	}
	return ""
}

func (m *ActivationRequest) GetPwConfirm() string {
	if m != nil {
		return m.PwConfirm
	}
	return ""
}

func (m *ActivationRequest) GetOtpSecret() string {
	if m != nil {
		return m.OtpSecret
	}
	return ""
}

func (m *ActivationRequest) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type AuthRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Recaptcha            string   `protobuf:"bytes,3,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{1}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthRequest) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type CredentialChangeRequest1 struct {
	Token                *AccessToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Current              string       `protobuf:"bytes,2,opt,name=current,proto3" json:"current,omitempty"`
	Recaptcha            string       `protobuf:"bytes,3,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CredentialChangeRequest1) Reset()         { *m = CredentialChangeRequest1{} }
func (m *CredentialChangeRequest1) String() string { return proto.CompactTextString(m) }
func (*CredentialChangeRequest1) ProtoMessage()    {}
func (*CredentialChangeRequest1) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{2}
}

func (m *CredentialChangeRequest1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredentialChangeRequest1.Unmarshal(m, b)
}
func (m *CredentialChangeRequest1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredentialChangeRequest1.Marshal(b, m, deterministic)
}
func (m *CredentialChangeRequest1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredentialChangeRequest1.Merge(m, src)
}
func (m *CredentialChangeRequest1) XXX_Size() int {
	return xxx_messageInfo_CredentialChangeRequest1.Size(m)
}
func (m *CredentialChangeRequest1) XXX_DiscardUnknown() {
	xxx_messageInfo_CredentialChangeRequest1.DiscardUnknown(m)
}

var xxx_messageInfo_CredentialChangeRequest1 proto.InternalMessageInfo

func (m *CredentialChangeRequest1) GetToken() *AccessToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *CredentialChangeRequest1) GetCurrent() string {
	if m != nil {
		return m.Current
	}
	return ""
}

func (m *CredentialChangeRequest1) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type CredentialChangeRequest2 struct {
	LoginToken           *AccessToken `protobuf:"bytes,1,opt,name=loginToken,proto3" json:"loginToken,omitempty"`
	Token                string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Current              string       `protobuf:"bytes,3,opt,name=current,proto3" json:"current,omitempty"`
	New                  string       `protobuf:"bytes,4,opt,name=new,proto3" json:"new,omitempty"`
	Confirm              string       `protobuf:"bytes,5,opt,name=confirm,proto3" json:"confirm,omitempty"`
	Recaptcha            string       `protobuf:"bytes,6,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CredentialChangeRequest2) Reset()         { *m = CredentialChangeRequest2{} }
func (m *CredentialChangeRequest2) String() string { return proto.CompactTextString(m) }
func (*CredentialChangeRequest2) ProtoMessage()    {}
func (*CredentialChangeRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{3}
}

func (m *CredentialChangeRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CredentialChangeRequest2.Unmarshal(m, b)
}
func (m *CredentialChangeRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CredentialChangeRequest2.Marshal(b, m, deterministic)
}
func (m *CredentialChangeRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CredentialChangeRequest2.Merge(m, src)
}
func (m *CredentialChangeRequest2) XXX_Size() int {
	return xxx_messageInfo_CredentialChangeRequest2.Size(m)
}
func (m *CredentialChangeRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_CredentialChangeRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_CredentialChangeRequest2 proto.InternalMessageInfo

func (m *CredentialChangeRequest2) GetLoginToken() *AccessToken {
	if m != nil {
		return m.LoginToken
	}
	return nil
}

func (m *CredentialChangeRequest2) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CredentialChangeRequest2) GetCurrent() string {
	if m != nil {
		return m.Current
	}
	return ""
}

func (m *CredentialChangeRequest2) GetNew() string {
	if m != nil {
		return m.New
	}
	return ""
}

func (m *CredentialChangeRequest2) GetConfirm() string {
	if m != nil {
		return m.Confirm
	}
	return ""
}

func (m *CredentialChangeRequest2) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type RemindRequest1 struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Recaptcha            string   `protobuf:"bytes,2,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemindRequest1) Reset()         { *m = RemindRequest1{} }
func (m *RemindRequest1) String() string { return proto.CompactTextString(m) }
func (*RemindRequest1) ProtoMessage()    {}
func (*RemindRequest1) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{4}
}

func (m *RemindRequest1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemindRequest1.Unmarshal(m, b)
}
func (m *RemindRequest1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemindRequest1.Marshal(b, m, deterministic)
}
func (m *RemindRequest1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemindRequest1.Merge(m, src)
}
func (m *RemindRequest1) XXX_Size() int {
	return xxx_messageInfo_RemindRequest1.Size(m)
}
func (m *RemindRequest1) XXX_DiscardUnknown() {
	xxx_messageInfo_RemindRequest1.DiscardUnknown(m)
}

var xxx_messageInfo_RemindRequest1 proto.InternalMessageInfo

func (m *RemindRequest1) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RemindRequest1) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type RegistRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Recaptcha            string   `protobuf:"bytes,2,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegistRequest) Reset()         { *m = RegistRequest{} }
func (m *RegistRequest) String() string { return proto.CompactTextString(m) }
func (*RegistRequest) ProtoMessage()    {}
func (*RegistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{5}
}

func (m *RegistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegistRequest.Unmarshal(m, b)
}
func (m *RegistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegistRequest.Marshal(b, m, deterministic)
}
func (m *RegistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegistRequest.Merge(m, src)
}
func (m *RegistRequest) XXX_Size() int {
	return xxx_messageInfo_RegistRequest.Size(m)
}
func (m *RegistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegistRequest proto.InternalMessageInfo

func (m *RegistRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegistRequest) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type RemindRequest2 struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	New                  string   `protobuf:"bytes,3,opt,name=new,proto3" json:"new,omitempty"`
	Recaptcha            string   `protobuf:"bytes,4,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemindRequest2) Reset()         { *m = RemindRequest2{} }
func (m *RemindRequest2) String() string { return proto.CompactTextString(m) }
func (*RemindRequest2) ProtoMessage()    {}
func (*RemindRequest2) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{6}
}

func (m *RemindRequest2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemindRequest2.Unmarshal(m, b)
}
func (m *RemindRequest2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemindRequest2.Marshal(b, m, deterministic)
}
func (m *RemindRequest2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemindRequest2.Merge(m, src)
}
func (m *RemindRequest2) XXX_Size() int {
	return xxx_messageInfo_RemindRequest2.Size(m)
}
func (m *RemindRequest2) XXX_DiscardUnknown() {
	xxx_messageInfo_RemindRequest2.DiscardUnknown(m)
}

var xxx_messageInfo_RemindRequest2 proto.InternalMessageInfo

func (m *RemindRequest2) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RemindRequest2) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RemindRequest2) GetNew() string {
	if m != nil {
		return m.New
	}
	return ""
}

func (m *RemindRequest2) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

type UserExistence struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Exists               bool     `protobuf:"varint,2,opt,name=exists,proto3" json:"exists,omitempty"`
	Recaptcha            string   `protobuf:"bytes,3,opt,name=recaptcha,proto3" json:"recaptcha,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserExistence) Reset()         { *m = UserExistence{} }
func (m *UserExistence) String() string { return proto.CompactTextString(m) }
func (*UserExistence) ProtoMessage()    {}
func (*UserExistence) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e16ccb8c5307b32, []int{7}
}

func (m *UserExistence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserExistence.Unmarshal(m, b)
}
func (m *UserExistence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserExistence.Marshal(b, m, deterministic)
}
func (m *UserExistence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserExistence.Merge(m, src)
}
func (m *UserExistence) XXX_Size() int {
	return xxx_messageInfo_UserExistence.Size(m)
}
func (m *UserExistence) XXX_DiscardUnknown() {
	xxx_messageInfo_UserExistence.DiscardUnknown(m)
}

var xxx_messageInfo_UserExistence proto.InternalMessageInfo

func (m *UserExistence) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserExistence) GetExists() bool {
	if m != nil {
		return m.Exists
	}
	return false
}

func (m *UserExistence) GetRecaptcha() string {
	if m != nil {
		return m.Recaptcha
	}
	return ""
}

func init() {
	proto.RegisterType((*ActivationRequest)(nil), "ActivationRequest")
	proto.RegisterType((*AuthRequest)(nil), "AuthRequest")
	proto.RegisterType((*CredentialChangeRequest1)(nil), "CredentialChangeRequest1")
	proto.RegisterType((*CredentialChangeRequest2)(nil), "CredentialChangeRequest2")
	proto.RegisterType((*RemindRequest1)(nil), "RemindRequest1")
	proto.RegisterType((*RegistRequest)(nil), "RegistRequest")
	proto.RegisterType((*RemindRequest2)(nil), "RemindRequest2")
	proto.RegisterType((*UserExistence)(nil), "UserExistence")
}

func init() { proto.RegisterFile("services.proto", fileDescriptor_8e16ccb8c5307b32) }

var fileDescriptor_8e16ccb8c5307b32 = []byte{
	// 631 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x55, 0x9e, 0x4d, 0x6f, 0x5a, 0xb7, 0x8c, 0xda, 0xca, 0x04, 0x16, 0xa8, 0x2b, 0x56, 0x53,
	0x1a, 0x24, 0x04, 0x0b, 0x10, 0x25, 0xad, 0x10, 0x2c, 0x20, 0x0a, 0xad, 0x2a, 0xb1, 0x9b, 0x4e,
	0x6e, 0x1d, 0xab, 0xf1, 0x8c, 0x99, 0x99, 0x34, 0xb0, 0xe5, 0x17, 0xf8, 0x0a, 0x7e, 0x86, 0x6f,
	0x42, 0xb6, 0xc7, 0x8e, 0x1d, 0x98, 0x40, 0xb3, 0xf3, 0x7d, 0x9d, 0x73, 0xe6, 0x3e, 0x0c, 0x9e,
	0x46, 0x75, 0x1b, 0x72, 0xd4, 0x34, 0x56, 0xd2, 0xc8, 0xde, 0x83, 0x40, 0xca, 0x60, 0x8a, 0x47,
	0xa9, 0x75, 0x35, 0xbb, 0x3e, 0xc2, 0x28, 0x36, 0xdf, 0x6c, 0x70, 0x2b, 0x92, 0x63, 0x9c, 0xda,
	0xd4, 0xc3, 0x1f, 0x35, 0xb8, 0x77, 0xc2, 0x4d, 0x78, 0xcb, 0x4c, 0x28, 0xc5, 0x08, 0xbf, 0xcc,
	0x50, 0x1b, 0xb2, 0x07, 0x2d, 0x23, 0x6f, 0x50, 0xf8, 0xb5, 0x47, 0xb5, 0xc7, 0x9b, 0xa3, 0xcc,
	0x20, 0x1e, 0xd4, 0xe3, 0xb9, 0x5f, 0x4f, 0x5d, 0xf5, 0x78, 0x4e, 0x1e, 0xc2, 0x66, 0x3c, 0x1f,
	0x48, 0x71, 0x1d, 0xaa, 0xc8, 0x6f, 0xa4, 0xee, 0x85, 0x23, 0x89, 0x4a, 0x13, 0x7f, 0x42, 0xae,
	0xd0, 0xf8, 0xcd, 0x2c, 0x5a, 0x38, 0x92, 0xa8, 0x42, 0xce, 0x62, 0xc3, 0x27, 0xcc, 0x6f, 0x65,
	0xd1, 0xc2, 0x71, 0xc8, 0xa1, 0x7b, 0x32, 0x33, 0x93, 0x5c, 0x4e, 0x0f, 0x3a, 0x33, 0x8d, 0xea,
	0x03, 0x8b, 0xd0, 0x2a, 0x2a, 0xec, 0x24, 0x16, 0x33, 0xad, 0xe7, 0x52, 0x8d, 0xad, 0xb4, 0xc2,
	0xae, 0x92, 0x34, 0x96, 0x49, 0xbe, 0xd7, 0xc0, 0x1f, 0x28, 0x1c, 0xa3, 0x30, 0x21, 0x9b, 0x0e,
	0x26, 0x4c, 0x04, 0x68, 0x19, 0x8f, 0x09, 0x2d, 0x77, 0xa0, 0xdb, 0xf7, 0x29, 0x9b, 0x99, 0x09,
	0xb5, 0xad, 0x3b, 0xe1, 0x1c, 0xb5, 0x3e, 0x4f, 0xe2, 0x79, 0x6f, 0x7c, 0xd8, 0xe0, 0x33, 0xa5,
	0x50, 0x18, 0xab, 0x22, 0x37, 0xff, 0x21, 0xe2, 0x97, 0x5b, 0x44, 0x9f, 0x3c, 0x07, 0x98, 0xca,
	0x20, 0x14, 0xe7, 0xff, 0xa5, 0xa4, 0x94, 0xbb, 0x18, 0x60, 0xbd, 0x3c, 0xc0, 0x92, 0xc8, 0x46,
	0x55, 0xe4, 0x2e, 0x34, 0x04, 0xce, 0xed, 0x98, 0x92, 0xcf, 0x34, 0xd7, 0x8e, 0xb6, 0x65, 0x73,
	0x17, 0x83, 0x5d, 0x3c, 0xa8, 0xbd, 0xfc, 0xa0, 0x53, 0xf0, 0x46, 0x18, 0x85, 0x62, 0x5c, 0xb4,
	0x72, 0x0f, 0x5a, 0x18, 0xb1, 0x70, 0x9a, 0x2f, 0x53, 0x6a, 0x54, 0x51, 0xea, 0xcb, 0x28, 0x03,
	0xd8, 0x1e, 0x61, 0x10, 0x6a, 0x53, 0xda, 0xc8, 0x3b, 0x83, 0x4c, 0x97, 0xa4, 0xf4, 0x1d, 0x7b,
	0x5d, 0x60, 0xd7, 0xcb, 0xd8, 0xb6, 0x25, 0x8d, 0x45, 0x4b, 0x2a, 0x6c, 0xcd, 0x65, 0x36, 0x06,
	0xdb, 0x17, 0x1a, 0xd5, 0xd9, 0xd7, 0x50, 0x1b, 0x14, 0x1c, 0x57, 0x6e, 0xed, 0x01, 0xb4, 0x31,
	0x49, 0xd4, 0x29, 0x67, 0x67, 0x64, 0xad, 0xd5, 0xcb, 0xd2, 0xff, 0xb9, 0x01, 0xcd, 0xe4, 0x2e,
	0xc8, 0x13, 0x68, 0xeb, 0x30, 0x10, 0x17, 0x31, 0xf1, 0x68, 0xa5, 0x4f, 0xbd, 0x03, 0x9a, 0xdd,
	0x3e, 0xcd, 0x6f, 0x9f, 0x9e, 0x25, 0xb7, 0x4f, 0x9e, 0x41, 0x87, 0x65, 0x67, 0x8e, 0x84, 0xd0,
	0x3f, 0x2e, 0xde, 0x59, 0xf7, 0x0a, 0xba, 0x01, 0x9a, 0x84, 0xf4, 0x9d, 0xb8, 0x96, 0xc4, 0xb9,
	0x7d, 0xbd, 0xfd, 0x6a, 0x24, 0x2f, 0x38, 0x86, 0x1d, 0x3e, 0x41, 0x7e, 0x53, 0xb4, 0x46, 0x13,
	0x8f, 0x56, 0xfa, 0xd4, 0x5b, 0xb2, 0x09, 0x85, 0x66, 0x02, 0x45, 0xb6, 0x68, 0xe9, 0x1f, 0xd0,
	0x73, 0x32, 0x93, 0xb7, 0x40, 0x54, 0x96, 0x74, 0x96, 0x0c, 0x2e, 0xbb, 0x21, 0x72, 0x9f, 0xba,
	0x6e, 0xdb, 0xf9, 0xd6, 0xd7, 0xd0, 0xe5, 0x13, 0x16, 0x05, 0x98, 0xe2, 0xb8, 0x11, 0xfa, 0x4e,
	0x84, 0x53, 0xd8, 0xb1, 0x52, 0x86, 0x97, 0xeb, 0xeb, 0x78, 0x09, 0x1d, 0x9e, 0x66, 0x0e, 0x2f,
	0xd7, 0x11, 0xf1, 0x02, 0x3c, 0x2b, 0x62, 0x84, 0x1a, 0xcd, 0xf0, 0x92, 0xec, 0xd0, 0xea, 0x49,
	0x3a, 0x4b, 0xfb, 0xb0, 0xa1, 0xfe, 0x5e, 0xe3, 0xa6, 0x7b, 0x0f, 0xfb, 0x96, 0xee, 0xc2, 0x6e,
	0xf7, 0xfa, 0x2f, 0x1f, 0x80, 0x97, 0x4d, 0x20, 0x87, 0x5a, 0x6f, 0x08, 0xbb, 0x56, 0x50, 0x56,
	0xf0, 0xf1, 0x7c, 0xb8, 0x62, 0x6f, 0xdd, 0x8b, 0xbf, 0xc9, 0x8b, 0xf2, 0xbb, 0xab, 0x78, 0xd3,
	0xfa, 0xdc, 0x50, 0x31, 0xbf, 0x6a, 0xa7, 0xee, 0xa7, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x82,
	0x49, 0x31, 0xe4, 0xa3, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	SignUp(ctx context.Context, in *RegistRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Activate(ctx context.Context, in *ActivationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAuthInfo(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*AuthInfo, error)
	CheckUserExists(ctx context.Context, in *UserExistence, opts ...grpc.CallOption) (*UserExistence, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AccessToken, error)
	RequestEmailChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error)
	ChamgeEmail(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestPWChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangePW(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestResetPW(ctx context.Context, in *RemindRequest1, opts ...grpc.CallOption) (*empty.Empty, error)
	ResetPW(ctx context.Context, in *RemindRequest2, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestUserNameChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error)
	ChamgeUserName(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error)
	RequestChangeOTP(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*empty.Empty, error)
	ChangeOTP(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) SignUp(ctx context.Context, in *RegistRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/signUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Activate(ctx context.Context, in *ActivationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/activate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) GetAuthInfo(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*AuthInfo, error) {
	out := new(AuthInfo)
	err := c.cc.Invoke(ctx, "/Auth/getAuthInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) CheckUserExists(ctx context.Context, in *UserExistence, opts ...grpc.CallOption) (*UserExistence, error) {
	out := new(UserExistence)
	err := c.cc.Invoke(ctx, "/Auth/checkUserExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AccessToken, error) {
	out := new(AccessToken)
	err := c.cc.Invoke(ctx, "/Auth/auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RequestEmailChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/requestEmailChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ChamgeEmail(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/chamgeEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RequestPWChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/requestPWChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ChangePW(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/changePW", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RequestResetPW(ctx context.Context, in *RemindRequest1, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/requestResetPW", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ResetPW(ctx context.Context, in *RemindRequest2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/resetPW", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RequestUserNameChange(ctx context.Context, in *CredentialChangeRequest1, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/requestUserNameChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ChamgeUserName(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/chamgeUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) RequestChangeOTP(ctx context.Context, in *AccessToken, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/requestChangeOTP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) ChangeOTP(ctx context.Context, in *CredentialChangeRequest2, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/Auth/changeOTP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	SignUp(context.Context, *RegistRequest) (*empty.Empty, error)
	Activate(context.Context, *ActivationRequest) (*empty.Empty, error)
	GetAuthInfo(context.Context, *AccessToken) (*AuthInfo, error)
	CheckUserExists(context.Context, *UserExistence) (*UserExistence, error)
	Auth(context.Context, *AuthRequest) (*AccessToken, error)
	RequestEmailChange(context.Context, *CredentialChangeRequest1) (*empty.Empty, error)
	ChamgeEmail(context.Context, *CredentialChangeRequest2) (*empty.Empty, error)
	RequestPWChange(context.Context, *CredentialChangeRequest1) (*empty.Empty, error)
	ChangePW(context.Context, *CredentialChangeRequest2) (*empty.Empty, error)
	RequestResetPW(context.Context, *RemindRequest1) (*empty.Empty, error)
	ResetPW(context.Context, *RemindRequest2) (*empty.Empty, error)
	RequestUserNameChange(context.Context, *CredentialChangeRequest1) (*empty.Empty, error)
	ChamgeUserName(context.Context, *CredentialChangeRequest2) (*empty.Empty, error)
	RequestChangeOTP(context.Context, *AccessToken) (*empty.Empty, error)
	ChangeOTP(context.Context, *CredentialChangeRequest2) (*empty.Empty, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) SignUp(ctx context.Context, req *RegistRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignUp not implemented")
}
func (*UnimplementedAuthServer) Activate(ctx context.Context, req *ActivationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Activate not implemented")
}
func (*UnimplementedAuthServer) GetAuthInfo(ctx context.Context, req *AccessToken) (*AuthInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAuthInfo not implemented")
}
func (*UnimplementedAuthServer) CheckUserExists(ctx context.Context, req *UserExistence) (*UserExistence, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckUserExists not implemented")
}
func (*UnimplementedAuthServer) Auth(ctx context.Context, req *AuthRequest) (*AccessToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Auth not implemented")
}
func (*UnimplementedAuthServer) RequestEmailChange(ctx context.Context, req *CredentialChangeRequest1) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestEmailChange not implemented")
}
func (*UnimplementedAuthServer) ChamgeEmail(ctx context.Context, req *CredentialChangeRequest2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChamgeEmail not implemented")
}
func (*UnimplementedAuthServer) RequestPWChange(ctx context.Context, req *CredentialChangeRequest1) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestPWChange not implemented")
}
func (*UnimplementedAuthServer) ChangePW(ctx context.Context, req *CredentialChangeRequest2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangePW not implemented")
}
func (*UnimplementedAuthServer) RequestResetPW(ctx context.Context, req *RemindRequest1) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestResetPW not implemented")
}
func (*UnimplementedAuthServer) ResetPW(ctx context.Context, req *RemindRequest2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPW not implemented")
}
func (*UnimplementedAuthServer) RequestUserNameChange(ctx context.Context, req *CredentialChangeRequest1) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestUserNameChange not implemented")
}
func (*UnimplementedAuthServer) ChamgeUserName(ctx context.Context, req *CredentialChangeRequest2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChamgeUserName not implemented")
}
func (*UnimplementedAuthServer) RequestChangeOTP(ctx context.Context, req *AccessToken) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestChangeOTP not implemented")
}
func (*UnimplementedAuthServer) ChangeOTP(ctx context.Context, req *CredentialChangeRequest2) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeOTP not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).SignUp(ctx, req.(*RegistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Activate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Activate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/Activate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Activate(ctx, req.(*ActivationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_GetAuthInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).GetAuthInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/GetAuthInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).GetAuthInfo(ctx, req.(*AccessToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_CheckUserExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserExistence)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).CheckUserExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/CheckUserExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).CheckUserExists(ctx, req.(*UserExistence))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RequestEmailChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RequestEmailChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/RequestEmailChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RequestEmailChange(ctx, req.(*CredentialChangeRequest1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ChamgeEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ChamgeEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/ChamgeEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ChamgeEmail(ctx, req.(*CredentialChangeRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RequestPWChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RequestPWChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/RequestPWChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RequestPWChange(ctx, req.(*CredentialChangeRequest1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ChangePW_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ChangePW(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/ChangePW",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ChangePW(ctx, req.(*CredentialChangeRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RequestResetPW_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemindRequest1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RequestResetPW(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/RequestResetPW",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RequestResetPW(ctx, req.(*RemindRequest1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ResetPW_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemindRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ResetPW(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/ResetPW",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ResetPW(ctx, req.(*RemindRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RequestUserNameChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest1)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RequestUserNameChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/RequestUserNameChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RequestUserNameChange(ctx, req.(*CredentialChangeRequest1))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ChamgeUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ChamgeUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/ChamgeUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ChamgeUserName(ctx, req.(*CredentialChangeRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_RequestChangeOTP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccessToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).RequestChangeOTP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/RequestChangeOTP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).RequestChangeOTP(ctx, req.(*AccessToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_ChangeOTP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CredentialChangeRequest2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).ChangeOTP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Auth/ChangeOTP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).ChangeOTP(ctx, req.(*CredentialChangeRequest2))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "signUp",
			Handler:    _Auth_SignUp_Handler,
		},
		{
			MethodName: "activate",
			Handler:    _Auth_Activate_Handler,
		},
		{
			MethodName: "getAuthInfo",
			Handler:    _Auth_GetAuthInfo_Handler,
		},
		{
			MethodName: "checkUserExists",
			Handler:    _Auth_CheckUserExists_Handler,
		},
		{
			MethodName: "auth",
			Handler:    _Auth_Auth_Handler,
		},
		{
			MethodName: "requestEmailChange",
			Handler:    _Auth_RequestEmailChange_Handler,
		},
		{
			MethodName: "chamgeEmail",
			Handler:    _Auth_ChamgeEmail_Handler,
		},
		{
			MethodName: "requestPWChange",
			Handler:    _Auth_RequestPWChange_Handler,
		},
		{
			MethodName: "changePW",
			Handler:    _Auth_ChangePW_Handler,
		},
		{
			MethodName: "requestResetPW",
			Handler:    _Auth_RequestResetPW_Handler,
		},
		{
			MethodName: "resetPW",
			Handler:    _Auth_ResetPW_Handler,
		},
		{
			MethodName: "requestUserNameChange",
			Handler:    _Auth_RequestUserNameChange_Handler,
		},
		{
			MethodName: "chamgeUserName",
			Handler:    _Auth_ChamgeUserName_Handler,
		},
		{
			MethodName: "requestChangeOTP",
			Handler:    _Auth_RequestChangeOTP_Handler,
		},
		{
			MethodName: "changeOTP",
			Handler:    _Auth_ChangeOTP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services.proto",
}
