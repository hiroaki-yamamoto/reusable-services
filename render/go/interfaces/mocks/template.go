// Code generated by MockGen. DO NOT EDIT.
// Source: template.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockITemplate is a mock of ITemplate interface
type MockITemplate struct {
	ctrl     *gomock.Controller
	recorder *MockITemplateMockRecorder
}

// MockITemplateMockRecorder is the mock recorder for MockITemplate
type MockITemplateMockRecorder struct {
	mock *MockITemplate
}

// NewMockITemplate creates a new mock instance
func NewMockITemplate(ctrl *gomock.Controller) *MockITemplate {
	mock := &MockITemplate{ctrl: ctrl}
	mock.recorder = &MockITemplateMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockITemplate) EXPECT() *MockITemplateMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockITemplate) Execute(wr io.Writer, data interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", wr, data)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockITemplateMockRecorder) Execute(wr, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockITemplate)(nil).Execute), wr, data)
}
